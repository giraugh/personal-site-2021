{"version":3,"sources":["config/theme.ts","components/TitleSection/titleSectionStyle.ts","components/TitleSection/TitleSection.tsx","components/BioSection/bioSectionStyle.ts","components/BioSection/BioSection.tsx","util/stringToParagraphs.tsx","config/strings.ts","components/BodySection/BodySection.tsx","components/BodySection/bodySectionStyle.ts","components/ProjectsHeadingSection/projectsHeadingSectionStyle.ts","components/ProjectsHeadingSection/ProjectsHeadingSection.tsx","config/projects.ts","components/ProjectsListSection/projectsListSectionStyle.ts","components/ProjectsListSection/ProjectsListSection.tsx","components/GamesHeadingSection/gamesHeadingSectionStyle.ts","components/GamesHeadingSection/GamesHeadingSection.tsx","components/App/App.tsx","index.tsx"],"names":["theme","primaryFont","secondaryBlue","secondaryBlueDark","primaryBlue","primaryPink","bodyText","Container","styled","div","ContentPair","Title","h1","p","TitleImageWrapper","TitleImage","img","TitleSVG","svg","GiraffeImage","React","forwardRef","props","ref","alt","src","process","ColourBlobPath","toPos","fromPos","toOffset","d","x","y","strokeWidth","strokeLinecap","stroke","TitleSection","useState","titlePos","setTitlePos","titleRef","useRef","updatePosition","current","titleRect","getClientRects","left","width","top","height","document","documentElement","scrollTop","useLayoutEffect","window","addEventListener","removeEventListener","BioSection","str","split","map","s","i","BodySection","HeadingImageWrapper","HeadingImage","Heading","h2","HeadingWrapper","HeadingDescription","SnakeImage","ProjectsHeadingSection","projects","name","description","image","link","ProjectContainer","ProjectTitle","ProjectImageWrapper","ProjectImage","ProjectDescription","span","Project","href","style","backgroundImage","ProjectsListSection","project","GamesImageWrapper","GamesImage","BranchImage","GamesHeaderSection","App","GamesHeadingSection","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d7bc10e.chunk.js","sourcesContent":["export const theme = {\n  primaryFont: 'Roboto Mono Medium, roboto',\n  secondaryBlue: '#CAC3FF',\n  secondaryBlueDark: '#867CD9',\n  primaryBlue: '#483AC6',\n  primaryPink: '#DA818D',\n  bodyText: '#4F4F4F',\n}\nexport type Theme = typeof theme\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  height: min(max(55vh, 100vw), 550px);\n  overflow: hidden;\n\n  @media (min-width: 750px) {\n    height: 65vh;\n  }\n\n  @media (min-width: 1000px) {\n    width: 80%;\n  }\n\n  @media (max-height: 670px) {\n    height: min(max(60vh, 100vw), 500px);\n  }\n`\n\nexport const ContentPair = styled.div`\n  display: grid;\n  width: 100%;\n  height: 100%;\n  grid-template-columns: 35fr 75fr;\n`\n\nexport const Title = styled.h1`\n  font-size: 3.6em;\n  font-family: ${(p) => p.theme.primaryFont};\n  color: white;\n  height: max-content;\n  justify-self: start;\n  margin-top: 55%;\n\n  @media (min-width: 750px) {\n    color: ${(p) => p.theme.secondaryBlueDark};\n    align-self: start;\n    margin-top: 30%;\n    margin-left: 35%;\n    font-size: 6em;\n  }\n\n  @media (min-width: 1800px) {\n    font-size: 8em;\n  }\n\n  @media (max-height: 670px) {\n    font-size: 2.8em;\n  }\n`\n\nexport const TitleImageWrapper = styled.div`\n  width: 85%;\n  height: 100%;\n`\n\nexport const TitleImage = styled.img`\n  position: relative;\n  left: -130%;\n  width: 300%;\n  padding-top: 45px;\n\n  @media (min-width: 1000px) {\n    left: -150%;\n  }\n`\n\nexport const TitleSVG = styled.svg`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: inherit;\n  height: inherit;\n  z-index: -1;\n\n  @media (min-width: 750px) {\n    visibility: hidden;\n  }\n\n  & > path {\n    @media (max-height: 670px) {\n      stroke-width: 250px;\n    }\n  }\n`\n","import React, { useRef, useLayoutEffect, useState } from 'react'\n\nimport { theme } from '../../config/theme'\nimport {\n  Container,\n  TitleImage,\n  Title,\n  TitleImageWrapper,\n  ContentPair,\n  TitleSVG,\n} from './titleSectionStyle'\n\ntype Position = { x: number; y: number }\n\nconst GiraffeImage = React.forwardRef((props, ref: React.Ref<HTMLImageElement>) => (\n  <TitleImageWrapper>\n    <TitleImage\n      alt=\"A giraffe with cool sunglasses\"\n      ref={ref}\n      src={`${process.env.PUBLIC_URL}/giraffe.svg`}\n    />\n  </TitleImageWrapper>\n))\n\nconst ColourBlobPath = ({ toPos }) => {\n  const fromPos = { x: 0, y: 0 }\n  const toOffset = { x: -15, y: 0 }\n  return (\n    <TitleSVG>\n      <path\n        d={`M${fromPos.x} ${fromPos.y} L${toPos.x + toOffset.x} ${toPos.y + toOffset.y}`}\n        strokeWidth={350}\n        strokeLinecap={'round'}\n        stroke={theme.secondaryBlue}\n      />\n    </TitleSVG>\n  )\n}\n\nconst TitleSection: React.FC = () => {\n  const [titlePos, setTitlePos] = useState<Position>()\n  const titleRef = useRef<HTMLHeadingElement>(null)\n\n  const updatePosition = () => {\n    if (titleRef.current !== null) {\n      const titleRect = titleRef.current.getClientRects()[0]\n      setTitlePos({\n        x: titleRect.left + titleRect.width / 2,\n        y: titleRect.top + titleRect.height / 2 + document.documentElement.scrollTop,\n      })\n    }\n  }\n\n  useLayoutEffect(() => {\n    window.addEventListener('resize', updatePosition)\n    updatePosition()\n    return () => window.removeEventListener('resize', updatePosition)\n  }, [])\n\n  return (\n    <Container>\n      {titlePos && <ColourBlobPath toPos={titlePos} />}\n      <ContentPair>\n        <GiraffeImage />\n        <Title ref={titleRef}>\n          Ewan <br /> Breakey\n        </Title>\n      </ContentPair>\n    </Container>\n  )\n}\n\nexport default TitleSection\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  font-family: ${(p) => p.theme.primaryFont};\n  width: 80%;\n  margin: auto;\n  letter-spacing: 0.05em;\n  font-size: 1.05em;\n  color: ${(p) => p.theme.bodyText};\n  margin-top: 20px;\n\n  & > p + p {\n    margin-top: 20px;\n  }\n\n  @media (min-width: 750px) {\n    width: 50%;\n    margin-left: 30%;\n    font-size: 1.2em;\n  }\n\n  @media (min-width: 1000px) {\n    margin-top: 30px;\n    font-size: 1.4em;\n  }\n`\n","import React from 'react'\n\nimport { bio } from '../../config/strings'\nimport { Container } from './bioSectionStyle'\nimport { stringToParagraphs } from '../../util/stringToParagraphs'\n\nconst BioSection: React.FC = () => <Container>{stringToParagraphs(bio)}</Container>\n\nexport default BioSection\n","import React from 'react'\n\ntype StringToParagraphsF = (str: string) => JSX.Element[]\nexport const stringToParagraphs: StringToParagraphsF = (str) =>\n  str.split('\\n').map((s, i) => <p key={i}>{s}</p>)\n","export {}\nexport const bio = `Hey! I'm Ewan.\n\nI'm a computer science student from Melbourne Australia. I also tutor in programming/maths and volunteer as an event manager for the RMIT CSIT society.\n\nRead on to find out more about me and to see some of the projects I've worked on.`\n\nexport const projectsDescription = `Here's a sample of some neat projects I've made and worked on.`\n\nexport const gamesDescription = `Over the years I've made quite a few games and other various projects. Those are here!`\n","import { Container } from './bodySectionStyle'\n\nconst BodySection = Container\nexport default BodySection\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  width: 100%;\n  margin-top: 10vh;\n  margin-bottom: 50px;\n  overflow: hidden;\n  padding-left: 10%;\n\n  @media (min-width: 750px) {\n    padding-left: 20%;\n  }\n`\n","import styled from 'styled-components'\n\nimport BodySection from '../BodySection/BodySection'\n\nexport const Container = styled(BodySection)`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  height: max(30vh, 300px);\n\n  @media (max-width: 750px) {\n    margin-top: 8vh;\n  }\n\n  @media (max-width: 750px) {\n    padding-top: 0%;\n  }\n`\n\nexport const HeadingImageWrapper = styled.div`\n  position: relative;\n  justify-self: end;\n  width: 300px;\n  overflow: hidden;\n\n  @media (max-width: 750px) {\n    top: -14%;\n    width: 250px;\n  }\n\n  @media (max-width: 520px) {\n    left: -25px;\n  }\n\n  @media (min-width: 900px) {\n    width: 400px;\n  }\n`\n\nexport const HeadingImage = styled.img`\n  transform: scaleX(-1) rotate(15deg);\n  position: relative;\n  left: 11%;\n\n  @media (min-width: 900px) {\n    top: -20%;\n  }\n`\n\nexport const Heading = styled.h2`\n  color: ${(p) => p.theme.primaryBlue};\n  font-size: 4.5em;\n\n  @media (max-width: 450px) {\n    font-size: 3.1em;\n    left: 10%;\n  }\n`\n\nexport const HeadingWrapper = styled.div`\n  font-family: ${(p) => p.theme.primaryFont};\n  position: relative;\n  align-self: center;\n  justify-self: center;\n  padding-top: 15%;\n\n  @media (max-width: 500px) {\n    padding-top: 20%;\n  }\n\n  @media (min-width: 750px) {\n    justify-self: start;\n  }\n`\n\nexport const HeadingDescription = styled.div`\n  margin-top: 20px;\n  font-size: 1.3em;\n  color: ${(p) => p.theme.bodyText};\n`\n","import React from 'react'\n\nimport {\n  Heading,\n  HeadingWrapper,\n  HeadingDescription,\n  Container,\n  HeadingImageWrapper,\n  HeadingImage,\n} from './projectsHeadingSectionStyle'\nimport { projectsDescription } from '../../config/strings'\n\nconst SnakeImage = () => (\n  <HeadingImageWrapper>\n    <HeadingImage alt=\"A blue snake with headphones\" src={`${process.env.PUBLIC_URL}/snake.svg`} />\n  </HeadingImageWrapper>\n)\n\nconst ProjectsHeadingSection: React.FC = () => {\n  return (\n    <Container>\n      <HeadingWrapper>\n        <Heading>Projects</Heading>\n        <HeadingDescription>{projectsDescription}</HeadingDescription>\n      </HeadingWrapper>\n      <SnakeImage />\n    </Container>\n  )\n}\n\nexport default ProjectsHeadingSection\n","export const projects = [\n  {\n    name: 'Honey Heist',\n    description: 'Online Character viewer for the open source Honey Heist RPG.',\n    image: 'http://cdn.ewanb.me/honey-heist-shot',\n    link: 'http://ewanb.me/honey-heist',\n  },\n  {\n    name: 'Critical Counter',\n    description: 'Discord bot for counting stats in a DnD Campaign.',\n    image: 'http://cdn.ewanb.me/critical-counter-shot',\n    link: 'http://github.com/giraugh/critical-counter',\n  },\n  {\n    name: 'Stevent',\n    description: 'Student Event platform managed and developed by CSIT',\n    image: 'http://cdn.ewanb.me/stevent-shot',\n    link: 'http://stevent.club',\n  },\n  {\n    name: 'Shaders',\n    description: 'My collection of Raymarched 3D Shaders.',\n    image: 'http://cdn.ewanb.me/shaders-short-shot',\n    link: 'https://shadertoy.com/user/giraugh',\n  },\n  {\n    name: 'Hex Redux',\n    description: 'Online tool for creating javascript bots that play Hex.',\n    image: 'http://cdn.ewanb.me/hex-redux-zoom-shot',\n    link: 'http://ewanb.me/hex-redux',\n  },\n]\n","import styled from 'styled-components'\n\nimport BodySection from '../BodySection/BodySection'\n\nexport const Container = styled(BodySection)`\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: center;\n  justify-items: center;\n  row-gap: 60px;\n  font-family: ${(p) => p.theme.primaryFont};\n  height: max-content;\n  margin-top: 2vh;\n  padding-right: 10%;\n\n  @media (min-width: 750px) {\n    padding-right: 20%;\n  }\n`\n\nexport const ProjectContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  align-items: center;\n  width: 100%;\n  row-gap: 10px;\n`\n\nexport const ProjectTitle = styled.h2`\n  color: ${(p) => p.theme.primaryBlue};\n  text-decoration: underline;\n  font-size: 2.3em;\n  letter-spacing: 0.04em;\n  font-weight: normal;\n\n  @media (min-width: 750px) {\n    font-size: 3em;\n  }\n`\n\nexport const ProjectImageWrapper = styled.div`\n  position: relative;\n  left: -20%;\n  width: 140%;\n  height: 250px;\n  overflow: hidden;\n  margin-top: 20px;\n  border: 5px solid ${(p) => p.theme.primaryBlue};\n  border-left: none;\n  border-right: none;\n\n  @media (min-width: 750px) {\n    border: 5px solid ${(p) => p.theme.primaryBlue};\n    left: -20px;\n    border-radius: 10px;\n    height: 350px;\n    width: 100%;\n  }\n`\n\nexport const ProjectImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n\n  @media (min-width: 750px) {\n    position: relative;\n  }\n`\n\nexport const ProjectDescription = styled.span`\n  font-size: 1.1em;\n  color: ${(p) => p.theme.bodyText};\n\n  @media (min-width: 750px) {\n    font-size: 1.4em;\n  }\n`\n","import React from 'react'\n\nimport { projects } from '../../config/projects'\nimport {\n  Container,\n  ProjectContainer,\n  ProjectTitle,\n  ProjectImage,\n  ProjectImageWrapper,\n  ProjectDescription,\n} from './projectsListSectionStyle'\n\nconst ProjectsListSection: React.FC = () => {\n  return (\n    <Container>\n      {projects.map((project) => (\n        <Project key={project.name} {...project} />\n      ))}\n    </Container>\n  )\n}\n\nconst Project = ({ name, description, image, link }) => {\n  return (\n    <ProjectContainer>\n      <ProjectTitle>\n        <a href={link}>{name}</a>\n      </ProjectTitle>\n      <ProjectDescription> {description} </ProjectDescription>\n      <ProjectImageWrapper>\n        <ProjectImage style={{ backgroundImage: `url(${image})` }}></ProjectImage>\n      </ProjectImageWrapper>\n    </ProjectContainer>\n  )\n}\n\nexport default ProjectsListSection\n","import styled from 'styled-components'\n\nimport BodySection from '../BodySection/BodySection'\n\nexport const Container = styled(BodySection)`\n  font-family: ${(p) => p.theme.primaryFont};\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  padding-left: 0px;\n  padding-right: 30px;\n\n  @media (max-width: 950px) {\n    grid-template-columns: 1fr 3fr;\n  }\n`\n\nexport const GamesImageWrapper = styled.div`\n  position: relative;\n  width: 600px;\n  transform: scaleX(-1);\n\n  @media (max-width: 950px) {\n    width: 450px;\n    left: -40px;\n  }\n\n  @media (max-width: 750px) {\n    width: 350px;\n    left: -50px;\n  }\n`\n\nexport const GamesImage = styled.img`\n  width: 100%;\n`\n\nexport const Heading = styled.h2`\n  font-size: 4.5em;\n  color: ${(p) => p.theme.primaryPink};\n\n  @media (max-width: 750px) {\n    font-size: 3em;\n  }\n`\n\nexport const HeadingWrapper = styled.div`\n  align-self: center;\n  justify-self: start;\n`\n\nexport const HeadingDescription = styled.div`\n  margin-top: 20px;\n  font-size: 1.3em;\n  color: ${(p) => p.theme.bodyText};\n`\n","import React from 'react'\n\nimport {\n  Container,\n  GamesImage,\n  GamesImageWrapper,\n  Heading,\n  HeadingWrapper,\n  HeadingDescription,\n} from './gamesHeadingSectionStyle'\nimport { gamesDescription } from '../../config/strings'\n\nconst BranchImage = () => (\n  <GamesImageWrapper>\n    <GamesImage alt=\"A branch with a pink bird on it\" src={`${process.env.PUBLIC_URL}/bird.png`} />\n  </GamesImageWrapper>\n)\n\nconst GamesHeaderSection: React.FC = () => {\n  return (\n    <Container>\n      <BranchImage />\n      <HeadingWrapper>\n        <Heading> Games & Other Projects </Heading>\n        <HeadingDescription> {gamesDescription} </HeadingDescription>\n      </HeadingWrapper>\n    </Container>\n  )\n}\n\nexport default GamesHeaderSection\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\n\nimport { theme } from '../../config/theme'\nimport TitleSection from '../TitleSection/TitleSection'\nimport BioSection from '../BioSection/BioSection'\nimport ProjectsHeadingSection from '../ProjectsHeadingSection/ProjectsHeadingSection'\nimport ProjectsListSection from '../ProjectsListSection/ProjectsListSection'\nimport GamesHeadingSection from '../GamesHeadingSection/GamesHeadingSection'\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <TitleSection />\n        <BioSection />\n        <ProjectsHeadingSection />\n        <ProjectsListSection />\n        <GamesHeadingSection />\n      </ThemeProvider>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App/App'\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}